// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name OmerM
import Foundation
@_exported import OmerM
import Swift
import UIKit
@_hasMissingDesignatedInitializers public class Constants {
  @objc deinit
}
public struct ServerRequests {
}
public struct ServerParamNames {
}
public struct HeadersRequest {
}
public struct Error {
}
public enum PaymentStatusOptions : Swift.Int {
  case success
  case failed
  case pending
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class BaseRequest : ObjectiveC.NSObject {
  public var requestName: Swift.String {
    get
  }
  public func initWithDictParams(_ dictParams: OmerM.Dict?, _ delegate: OmerM.RequestFinishedProtocol?) -> OmerM.BaseRequest
  public func createResponseFromJSONDict(JSONDict: Swift.Dictionary<Swift.String, Any>) -> OmerM.BaseServerResponse?
  public func shouldAttemptSendingRequestAgain() -> Swift.Bool
  public func increaseRequestAttemptsCounter()
  public func resetRequestAttemptsCounter()
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class PaymentManager {
  public var bitPaymentId: Swift.String
  public func callCreatePaymentProcess(requestFinishDelegate: OmerM.RequestFinishedProtocol? = nil)
  public func callGetBitPaymentStatusRequest(requestFinishDelegate: OmerM.RequestFinishedProtocol? = nil)
  public func callCancelBitPaymentRequest(requestFinishDelegate: OmerM.RequestFinishedProtocol? = nil)
  @objc deinit
}
extension PaymentManager : OmerM.RequestFinishedProtocol {
  public func requestFailed(request: OmerM.BaseRequest, response: OmerM.BaseServerResponse?)
  public func requestSucceeded(request: OmerM.BaseRequest, response: OmerM.BaseInnerResponse)
}
@_hasMissingDesignatedInitializers public class StartupManager {
  public func callInitSDK(requestFinishDelegate: OmerM.RequestFinishedProtocol? = nil)
  @objc deinit
}
extension StartupManager : OmerM.RequestFinishedProtocol {
  public func requestFailed(request: OmerM.BaseRequest, response: OmerM.BaseServerResponse?)
  public func requestSucceeded(request: OmerM.BaseRequest, response: OmerM.BaseInnerResponse)
}
@_hasMissingDesignatedInitializers public class SessionManager {
  public func pushBitVC()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class CreatePaymentProcessResponse : OmerM.BaseInnerResponse {
  @objc override dynamic public func buildFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseInnerResponse
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers open class Meshulam : ObjectiveC.NSObject {
  weak open var delegate: OmerM.MeshulamDelegate?
  public static var shared: OmerM.Meshulam
  public var pageCode: Swift.String
  public var apiKey: Swift.String
  public var userId: Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers public class BaseServerResponse {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class InitSDKResponse : OmerM.BaseInnerResponse {
  @objc override dynamic public func buildFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseInnerResponse
  @objc deinit
}
public protocol RequestFinishedProtocol : AnyObject {
  func requestSucceeded(request: OmerM.BaseRequest, response: OmerM.BaseInnerResponse)
  func requestFailed(request: OmerM.BaseRequest, response: OmerM.BaseServerResponse?)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class SetBitPaymentResponse : OmerM.BaseInnerResponse {
  @objc override dynamic public func buildFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseInnerResponse
  @objc deinit
}
public protocol MeshulamDelegate : ObjectiveC.NSObjectProtocol {
  func onSuccess()
  func onFailure(_ error: OmerM.Error)
  func onCancle()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class BaseInnerResponse : ObjectiveC.NSObject {
  @discardableResult
  @objc dynamic public func buildFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseInnerResponse
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ErrorResponse : OmerM.BaseInnerResponse {
  @objc override dynamic public func buildFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseInnerResponse
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class InitSDKRequest : OmerM.BaseRequest {
  override public func createResponseFromJSONDict(JSONDict: OmerM.Dict) -> OmerM.BaseServerResponse?
  public static func createInitialDictParams() -> OmerM.Dict
  override public var requestName: Swift.String {
    get
  }
  @objc override dynamic public init()
  @objc deinit
}
public typealias Dict = [Swift.String : Any]
@objc @_inheritsConvenienceInitializers public class NetworkManager : ObjectiveC.NSObject {
  public static var shared: OmerM.NetworkManager
  public var baseURL: Swift.String {
    get
  }
  public var applicationToken: Swift.String {
    get
  }
  public var maxTime: Swift.Int {
    get
  }
  public var startDelay: Swift.Int {
    get
  }
  public var intervalLength: Swift.Int {
    get
  }
  public func sendRequest(_ request: OmerM.BaseRequest)
  public func fillWithInitSDKResponse(_ response: OmerM.InitSDKResponse)
  @objc override dynamic public init()
  @objc deinit
}
